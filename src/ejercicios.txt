
EJERCICIO 1

-Crear un clase producto con atributos(nombre, precio y cantidad)
-Crear clase principal (main) que gestione nuestra tienda. El programa deberá:
    - Añadir productos en el inventario
    - Mostrar todos los productos
    - Actualizar la cantidad y el precio de un producto específico
    - Eliminar un producto del inventario ((Eliminar productos intermedios. No puede ser el primero ni el último)
    - Calcular el valor total del inventario (suma de precio * cantidad de cada producto) de todos los productos

Se han de usar ArrayLists.


EJERCICIO 3

-Crear una clase Vehículo con atributos velocidadMaxima y marca. Otras dos clases hijas: Coche y Bicicleta
-Ambas clases tendrán un método acelerar() que aumentará la velocidad actual.
-En la clase Coche, añade un atributo extra llamado capacidadCombustible
-En la clase Bicicleta, añade un atributo llamado tipoBicicleta
El programa pedirá:
    -Acelerar tanto el coche como la bicicleta
    -Mostrar la información completa de cada vehículo

EJERCICIO 4

-Crear una clase abstracta CuentaBancaria con atributos como saldo y métodos abstractos como depositar() y retirar().
-Después, crear dos clases hijas: CuentaCorriente y CuentaAhorros.
-CuentaCorriente tendrá un atributo adicional envios
-CuentaAhorros tendrña  un atributo interesAnual
El programa debe:
    -Permitir la creación de cuentas corrientes y cuentas de ahorros
    -Realizar depósitos y retiros de cuenta
    -Calcular el interés anual de cuenta de ahorro(1.59%) y permitir un máximo de envios en la cuenta corriente
    -Mostrar la información completa de cada cuenta


EJERCICIO 5

-Crear una interfaz llamada Conectable con metodos encender() y apagar()
-Después, crear dos clases Teléfono y Ordenador que implementan esta interfaz
    -Crear en el main instancias de teléfono y ordenador
    -Encender y apagar ambos dispositivos

    Si añadimos dos interfaces
    -Crear otra interfaz llamada Recargable con metodos cargar() y nivelDeBateria()


EJERCICIO 7

-Crear una clase abstracta llamada Empleado con atributos nombre, salarioBase y un método abstracto calcularSalario()
    -Crear dos interfaces Autenticable, con método iniciarSesioon() y cerrarSesion(). Y la interfaz Bonificable con el método calcularBono()

    Crear dos clases Gerente y Programador, que extiendan la clase empleado e implementen las dos interfaces
    - Crear instancias de Gerente y Programador
    - Iniciar sesión para ambos empleados y calcular el salario(incluyendo los bonos)
    - Mostrar la información completa de cada empleado
    - Cerrar sesión para ambos empleados


  EJEMPLO*
  public static void main(String []args){
  Gerente gerente = new Gerente("Laura", 3000, 500); nombre, salario y bono
  Programador programador = new Programador ("Carlos", 300, 500);

  gerente.iniciarSesion("LauraG", "password1");
  programador.iniciarSesion("CarlosG", "password2");

  System.out.println("Información del gerente " + gerente.mostrarInfo());
  System.out.println("Información del programador " + programador.mostrarInfo());

  gerente.cerrarSesion();
  programador.cerrarSesion();



EJERCICIO

Crear el programa que reciba el nombre de un fichero.
    -Si no existe, lo crea
    -Si existe, debemos contar de caracter en caracter las vocales de la primera linea del archivo
    Hay que mostrar en pantalla el resultado de la ejecución
  }
  }

EJER

Crear un programa con los siguientes requisitos. Se ha de crear una clase llamada FileManager.
En él, tendremos que declarar un constructor al que le llegará una ruta de un archivo(String).
En esta clase tendremos los métodos Existes (retorno valor boolean), importFromFile (void function),
getDataFromFile(retorna un ArrayList tipo Figura)
Por otra parte, tendremos una clase abstracta llamada Figura (clase Padre), añadid los métodos
y atributos que creais necesarios.
Creamos clases hijas llamadas Rectángulo, Círculo y Cuadrado

Para saber cual vamos a instanciar e intrpoducir dentro del ArrayLiust que usamos en importFromFile,
deberemos de conocer la primera palabra de cada linea en el archivo TXT

El archivo TXT tendrá la siguiente esctructura:
-Rectangulo 10 10 480 480 #ccccee
-Rectangulo 15 15 350 350 #fff0f0
-Circulo 250 250 100 #aaaaaa
-Cuadrado 300 300 #000000

Como podeis ver, la primera palabra es el tipo de figura.
Los siguientes valores son las dimensiones de cada figura. Finalmente, el valor seguido del # es el color.
hay que almacenar el color junto al #

Cada clase debe tener su propio método para ver por consola tanto la medida como el color

Si una linea no tiene color, es decir, no tiene "#..." la figura no la debemos almacenarr en el array.
En este caso, imprimiremos por pantalla "Figura no Válida".
Debeis de añadir una linea en el fichero TXT que muestre este caso.

Finalmente, crearemos un fichero en otro método dentro de FileManager que cree un archivo TXT llamado
resultados.txt donde se almacenarán todos los métodos toString de cada figura
